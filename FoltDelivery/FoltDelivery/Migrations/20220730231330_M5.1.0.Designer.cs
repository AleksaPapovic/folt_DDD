// <auto-generated />
using System;
using System.Collections.Generic;
using FoltDelivery.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FoltDelivery.Migrations
{
    [DbContext(typeof(FoltDeliveryDbContext))]
    [Migration("20220730231330_M5.1.0")]
    partial class M510
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Customer.Loyalty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("PointsRequired")
                        .HasColumnType("integer");

                    b.Property<int>("TypeName")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Loyalty");
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Customer.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Blocked")
                        .HasColumnType("boolean");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("boolean");

                    b.Property<List<Guid>>("CustomerOrdersIds")
                        .HasColumnType("uuid[]");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("text");

                    b.Property<List<Guid>>("DeliveryOrdersIds")
                        .HasColumnType("uuid[]");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<bool>("LogicalDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<double>("Points")
                        .HasColumnType("double precision");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Product.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("LogicalDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RestaurantMenuId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantMenuId");

                    b.ToTable("Article");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff15"),
                            Description = "Pica sa tradicijom",
                            Image = "",
                            LogicalDeleted = false,
                            Name = "Vojvodjanska",
                            Price = 1300.0,
                            Quantity = 1,
                            RestaurantId = new Guid("11223344-5566-7788-99aa-bbccddeeff00"),
                            RestaurantMenuId = new Guid("11223344-5566-7788-99aa-bbccddeeff15"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff16"),
                            Description = "Pica sa tradicijom",
                            Image = "",
                            LogicalDeleted = false,
                            Name = "Vojvodjanska",
                            Price = 1300.0,
                            Quantity = 1,
                            RestaurantId = new Guid("11223344-5566-7788-99aa-bbccddeeff00"),
                            RestaurantMenuId = new Guid("11223344-5566-7788-99aa-bbccddeeff15"),
                            Type = 1
                        });
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Restaurant.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("integer");

                    b.Property<int>("PostalCode")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff06"),
                            City = "Novi Sad",
                            HouseNumber = 1,
                            PostalCode = 21000,
                            State = "Srbija",
                            StreetName = ""
                        },
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff08"),
                            City = "Novi Sad",
                            HouseNumber = 1,
                            PostalCode = 21000,
                            State = "Srbija",
                            StreetName = ""
                        });
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Restaurant.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff05"),
                            AddressId = new Guid("11223344-5566-7788-99aa-bbccddeeff06"),
                            Latitude = 45.247999999999998,
                            Longitude = 19.842500000000001
                        },
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff09"),
                            AddressId = new Guid("11223344-5566-7788-99aa-bbccddeeff08"),
                            Latitude = 45.258899999999997,
                            Longitude = 19.835699999999999
                        });
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Restaurant.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<int>("LogoId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("MenuId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff00"),
                            Deleted = false,
                            LocationId = new Guid("11223344-5566-7788-99aa-bbccddeeff05"),
                            LogoId = 1,
                            MenuId = new Guid("11223344-5566-7788-99aa-bbccddeeff15"),
                            Name = "Pizzeria Ciao",
                            Status = 1,
                            Type = "Restaurant"
                        },
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff01"),
                            Deleted = false,
                            LocationId = new Guid("11223344-5566-7788-99aa-bbccddeeff09"),
                            LogoId = 2,
                            MenuId = new Guid("11223344-5566-7788-99aa-bbccddeeff16"),
                            Name = "Boom boom pancakes",
                            Status = 1,
                            Type = "FastFood"
                        });
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Restaurant.RestaurantMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("RestaurantMenu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff15")
                        },
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff16")
                        });
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Customer.User", b =>
                {
                    b.HasOne("FoltDelivery.Domain.Aggregates.Customer.Loyalty", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Product.Article", b =>
                {
                    b.HasOne("FoltDelivery.Domain.Aggregates.Restaurant.RestaurantMenu", null)
                        .WithMany("_menuArticle")
                        .HasForeignKey("RestaurantMenuId");
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Restaurant.Location", b =>
                {
                    b.HasOne("FoltDelivery.Domain.Aggregates.Restaurant.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("FoltDelivery.Domain.Aggregates.Restaurant.Restaurant", b =>
                {
                    b.HasOne("FoltDelivery.Domain.Aggregates.Restaurant.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("FoltDelivery.Domain.Aggregates.Restaurant.RestaurantMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");
                });
#pragma warning restore 612, 618
        }
    }
}
